<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:oxy="http://oxyplot.org/wpf"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:Kritik"
        xmlns:dp="clr-namespace:DataPiping"
        xmlns:Data="clr-namespace:System.Data;assembly=System.Data.Common"
        x:Class="Kritik.MainWindow"
        mc:Ignorable="d"
        Height="800" Width="1200" MinHeight="640" MinWidth="1000"
        WindowStartupLocation="CenterScreen" WindowStyle="ThreeDBorderWindow"
        Name="KritikMainWindow"
        Icon="/icons/kritik.ico"
        Closing="KritikMainWindow_Closing"
        AllowDrop="True" Drop="KritikMainWindow_Drop">
    <Window.Resources>
        <local:NotesTextBoxHeightConverter x:Key="NotesTextBoxHeightConverter"/>
        <local:FormatEConverter x:Key="FormatEConverter"/>
        <local:FormatDefaultConverter x:Key="FormatDefaultConverter"/>
        <local:FormatSpacesConverter x:Key="FormatSpacesConverter"/>
        <local:FormatToIntConverter x:Key="FormatToIntConverter"/>
        <local:EnumToStringConverter x:Key="EnumToStringConverter"/>
        <local:EnumToStringByResourceDictionaryConverter x:Key="EnumToStringByResourceDictionaryConverter"/>
        <local:EnumToBoolConverter x:Key="EnumToBoolConverter"/>
        <local:NewDataGridItemConverter x:Key="NewDataGridItemConverter"/>
        <local:RemoveDecimalSeparatorAtTheEndConverter x:Key="RemoveDecimalSeparatorAtTheEndConverter"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="SlateGray"/>
    </Window.Resources>
    <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>

    <Window.Title>
        <Binding Path="WindowTitle"/>
    </Window.Title>
    <Grid Name="MainGrid">
        <TabControl SelectedIndex="{Binding TabControlSelectedIndex}">
            <TabItem Header="{StaticResource Calculation}" Name="vypocetTabItem">
                <TabItem.Background>
                    <LinearGradientBrush EndPoint="0,1">
                        <GradientStop Color="#FFF0F0F0"/>
                        <GradientStop Color="{DynamicResource {x:Static SystemColors.GradientActiveCaptionColorKey}}" Offset="1"/>
                    </LinearGradientBrush>
                </TabItem.Background>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="0">
                        <ScrollViewer  ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <Border Margin="10" BorderThickness="1" BorderBrush="Gray" Padding="5" CornerRadius="3" MinHeight="541" VerticalAlignment="Top" Grid.Row="0">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="5" />
                                        <RowDefinition Height="23" />
                                        <RowDefinition Height="11" />
                                        <RowDefinition Height="23" />
                                        <RowDefinition Height="23" />
                                        <RowDefinition Height="23" />
                                        <RowDefinition Height="23" />
                                        <RowDefinition Height="6" />
                                        <RowDefinition Height="21" />
                                        <RowDefinition Height="27" />
                                        <RowDefinition Height="27" />
                                        <RowDefinition Height="6" />
                                        <RowDefinition Height="27"/>
                                        <RowDefinition />
                                        <RowDefinition Height="6" />
                                        <RowDefinition Height="21" />
                                        <RowDefinition Height="23" />
                                        <RowDefinition Height="23" />
                                        <RowDefinition Height="6" />
                                        <RowDefinition Height="23" />
                                        <RowDefinition Height="23" />
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="6" />
                                        <RowDefinition Height="119" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Text="{StaticResource CRITICAL_SPEED}" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="16"/>
                                    <Separator Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2"/>
                                    <StackPanel Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0, 3, 0, 0">
                                        <Button Name="newFileButton" Height="20" Width="20" Margin="0, 0, 10, 0" ToolTip="{StaticResource New_calculation_CtrlN}" Command="{Binding NewCalculationCommand}">
                                            <Image Source="/icons/NewFile_16x.png" />
                                        </Button>
                                        <Button Name="openFileButton"  Height="20" Width="20" Margin="0, 0, 10, 0" ToolTip="{StaticResource Open_calculation_CtrlO}" Command="{Binding OpenFileCommand}">
                                            <Image Source="/icons/OpenFolder_16x.png" />
                                        </Button>
                                        <Button Name="saveFileButton"  Height="20" Width="20" Margin="0, 0, 10, 0" ToolTip="{StaticResource Save_calculation_CtrlS}" Command="{Binding SaveFileCommand}">
                                            <Image Source="/icons/Save_16x.png" />
                                        </Button>
                                        <Button Name="saveAsFileButton"  Height="20" Width="20" Margin="0, 0, 0, 0" ToolTip="{StaticResource Save_calculation_as_Right_button}" Command="{Binding SaveFileAsCommand}">
                                            <Image Source="/icons/SaveAs_16x.png" />
                                            <Button.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="{StaticResource Save_to_custom_sheet}" Command="{Binding SaveToCustomSheetCommand}"/>
                                                </ContextMenu>
                                            </Button.ContextMenu>
                                        </Button>
                                    </StackPanel>
                                    <Separator Grid.Row="3" Grid.ColumnSpan="2" Margin="0, 5, 0, 5"/>
                                    <TextBlock Text="{StaticResource Title}" Grid.Row="4" Grid.Column="0" HorizontalAlignment="Left" Margin="0, 0, 0, 5"/>
                                    <TextBox Text="{Binding CalculationProperties.Title}" GotKeyboardFocus="TextBoxSelectContentByKeyboard" Grid.Row="4" Grid.Column="1" TextWrapping="NoWrap" Width="150" Margin="5, 0, 0, 5"/>
                                    <TextBlock Text="{StaticResource Description}" Grid.Row="5" Grid.Column="0" HorizontalAlignment="Left" Margin="0, 0, 0, 5"/>
                                    <TextBox Text="{Binding CalculationProperties.Description}" GotKeyboardFocus="TextBoxSelectContentByKeyboard" Grid.Row="5" Grid.Column="1" TextWrapping="NoWrap" Width="150" Margin="5, 0, 0, 5" />
                                    <TextBlock Text="{StaticResource Author}" Grid.Row="6" Grid.Column="0" HorizontalAlignment="Left" Margin="0, 0, 0, 5"/>
                                    <TextBox Text="{Binding CalculationProperties.Author}" GotKeyboardFocus="TextBoxSelectContentByKeyboard" Grid.Row="6" Grid.Column="1" TextWrapping="NoWrap" Width="150" Margin="5, 0, 0, 5" />
                                    <TextBlock Text="{StaticResource Date}" Grid.Row="7" Grid.Column="0" HorizontalAlignment="Left" Margin="0, 0, 0, 5"/>
                                    <TextBox Text="{Binding CalculationProperties.Date}" GotKeyboardFocus="TextBoxSelectContentByKeyboard" Grid.Row="7" Grid.Column="1" TextWrapping="NoWrap" Width="150" Margin="5, 0, 0, 5" />
                                    <TextBlock Text="{StaticResource Today}" Grid.Row="7" Grid.Column="1" HorizontalAlignment="Right" Margin="0, 0, 7, 0" Foreground="Gray">
                                        <TextBlock.InputBindings>
                                            <MouseBinding MouseAction="LeftClick" Command="{Binding FillTodayCommand}"/>
                                        </TextBlock.InputBindings>
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="TextDecorations" Value="Underline"/>
                                                        <Setter Property="Cursor" Value="Hand"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="False">
                                                        <Setter Property="TextDecorations" Value="None"/>
                                                        <Setter Property="Cursor" Value="Arrow"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Separator Grid.Row="8" Grid.ColumnSpan="2" Margin="0, 0, 0, 5"/>
                                    <TextBlock Text="{StaticResource Boundary_conditions}" Grid.Row="9" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="0, 0, 0, 5"/>
                                    <StackPanel Grid.Row="10" Grid.ColumnSpan="2" Orientation="Horizontal">
                                        <TextBlock Text="{StaticResource Left_end}" Margin="20, 0, 0, 5" VerticalAlignment="Center"/>
                                        <ComboBox ItemsSource="{Binding BoundaryConditionsItems}" 
                                                  SelectedValue="{Binding Shaft.Properties.BCLeft, Converter={StaticResource EnumToStringByResourceDictionaryConverter}}"
                                                  Width="95" Margin="10, 0, 0, 5" VerticalAlignment="Center" />
                                    </StackPanel>
                                    <StackPanel Grid.Row="11" Grid.ColumnSpan="2" Orientation="Horizontal">
                                        <TextBlock Text="{StaticResource Right_end}" Margin="20, 0, 0, 5" VerticalAlignment="Center"/>
                                        <ComboBox ItemsSource="{Binding BoundaryConditionsItems}" 
                                                  SelectedValue="{Binding Shaft.Properties.BCRight, Converter={StaticResource EnumToStringByResourceDictionaryConverter}}"
                                                  Width="95" Margin="5, 0, 0, 5" VerticalAlignment="Center" />
                                    </StackPanel>
                                    <Separator Grid.Row="12" Grid.ColumnSpan="2" Margin="0, 0, 0, 5"/>
                                    <StackPanel Grid.Row="13" Grid.ColumnSpan="2" Orientation="Horizontal">
                                        <TextBlock Margin="0, 0, 0, 5" VerticalAlignment="Center" Text="{StaticResource Gyroscopic_effects}"/>
                                        <ComboBox ItemsSource="{Binding GyroscopicEffectsItems}" 
                                                  SelectedValue="{Binding Shaft.Properties.Gyros, Converter={StaticResource EnumToStringByResourceDictionaryConverter}}" 
                                                  Width="84" Margin="5, 0, 0, 5" VerticalAlignment="Center" />
                                        <Button x:Name="shaftRotationInfluenceExpandButton" 
                                                Command="{Binding ShaftRotationInfluenceVisibilityCommand}"
                                                ToolTip="{StaticResource Shaft_rotation_influence}"
                                                Width="10" Height="22" VerticalAlignment="Center" Margin="2, 0, 0, 5">
                                            <Image Source="{Binding ShaftRotationInfluenceButtonSource}" Width="10" HorizontalAlignment="Center" Margin="0, 8, 0, 0"/>
                                        </Button>
                                    </StackPanel>
                                    <StackPanel  Grid.Row="14" Grid.ColumnSpan="2" Orientation="Vertical" Margin="2, 2, 0, 0" 
                                                 Visibility="{Binding ShaftRotationInfluenceVisibility}">
                                        <CheckBox IsChecked="{Binding Shaft.Properties.ShaftRotationInfluence}"
                                                  Command="{Binding ShaftRotationInfluenceCheckBoxCommand}" 
                                                  Content="{StaticResource with_shaft_rotation_influence}"  
                                                  VerticalAlignment="Center" HorizontalAlignment="Left" Margin="2, 0, 2, 0"/>
                                        <StackPanel Orientation="Horizontal">
                                            <RadioButton GroupName="shaftRotationRadioButtons" 
                                                         Command="{Binding ShaftRotationOptionChangedCommand}" 
                                                         IsChecked="{Binding ShaftRotationInfluenceSelectedOption, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=0}" 
                                                         Margin="5, 3, 0, 3" 
                                                         Content="{StaticResource operating}"/>
                                            <RadioButton GroupName="shaftRotationRadioButtons"
                                                         Command="{Binding ShaftRotationOptionChangedCommand}" 
                                                         IsChecked="{Binding ShaftRotationInfluenceSelectedOption, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=1}" 
                                                         Margin="5, 3, 0, 3"
                                                         Content="{StaticResource runaway}"/>
                                        </StackPanel>
                                        <RadioButton GroupName="shaftRotationRadioButtons"
                                                     Name="customRPMRadioButton" 
                                                     Command="{Binding ShaftRotationOptionChangedCommand}"
                                                     IsChecked="{Binding ShaftRotationInfluenceSelectedOption, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=2}" 
                                                     Margin="5, 0, 0, 0">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{StaticResource other}" Margin="0, 0, 2, 0"/>
                                                <TextBox Text="{Binding ShaftRotationInfluenceCustomValue, Converter={StaticResource FormatDefaultConverter}}"
                                                         IsEnabled="{Binding ElementName=customRPMRadioButton, Path=IsChecked}"
                                                         Width="50" Margin="5, 0, 0, 5" VerticalAlignment="Center" GotKeyboardFocus="TextBoxSelectContentByKeyboard"/>
                                                <TextBlock Margin="5, 0, 0, 5" VerticalAlignment="Center">
                                                <Run Text="min&#x207B;&#x00B9;" />
                                                </TextBlock>
                                            </StackPanel>
                                        </RadioButton>
                                    </StackPanel>

                                    <Separator Grid.Row="15" Grid.ColumnSpan="2" Margin="0, 0, 0, 5"/>
                                    <TextBlock Text="{StaticResource Shaft_material}" Grid.Row="16" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="0, 0, 0, 5"/>
                                    <StackPanel Grid.Row="17" Grid.ColumnSpan="2" Orientation="Horizontal">
                                        <TextBlock Text="E =" Margin="20, 0, 0, 5" VerticalAlignment="Center"/>
                                        <TextBox Text="{Binding Shaft.Properties.YoungModulus, Converter={StaticResource FormatDefaultConverter}, ConverterParameter=9}" 
                                                 Width="50" Margin="5, 0, 0, 5" VerticalAlignment="Center" GotKeyboardFocus="TextBoxSelectContentByKeyboard"/>
                                        <TextBlock Text="GPa" Margin="5, 0, 0, 5" VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <StackPanel Grid.Row="18" Grid.ColumnSpan="2" Orientation="Horizontal">
                                        <TextBlock Text="ρ =" Margin="20, 0, 0, 5" VerticalAlignment="Center"/>
                                        <TextBox Text="{Binding Shaft.Properties.MaterialDensity, Converter={StaticResource FormatDefaultConverter}}" 
                                                 Width="50" Margin="5, 0, 0, 5" VerticalAlignment="Center" GotKeyboardFocus="TextBoxSelectContentByKeyboard"/>
                                        <TextBlock Margin="5, 0, 0, 5" VerticalAlignment="Center">
                                        <Run Text="kg.m&#x207B;&#x00B3;" />
                                        </TextBlock>
                                    </StackPanel>
                                    <Separator Grid.Row="19" Grid.ColumnSpan="2" Margin="0, 0, 0, 5"/>
                                    <StackPanel Grid.Row="20" Grid.ColumnSpan="2" Orientation="Horizontal">
                                        <TextBlock Text="{StaticResource Operating_speed}" Margin="0, 0, 0, 5" VerticalAlignment="Center"/>
                                        <TextBox Text="{Binding ShaftOperatingSpeed, Converter={StaticResource FormatDefaultConverter}}" 
                                                 Width="50" Margin="9, 0, 0, 5" VerticalAlignment="Center" GotKeyboardFocus="TextBoxSelectContentByKeyboard"/>
                                        <TextBlock Margin="5, 0, 0, 5" VerticalAlignment="Center">
                                        <Run Text="min&#x207B;&#x00B9;" />
                                        </TextBlock>
                                    </StackPanel>
                                    <StackPanel Grid.Row="21" Grid.ColumnSpan="2" Orientation="Horizontal">
                                        <TextBlock Text="{StaticResource Runaway_speed}" Margin="0, 0, 0, 5" VerticalAlignment="Center"/>
                                        <TextBox Text="{Binding ShaftRunawaySpeed, Converter={StaticResource FormatDefaultConverter}}"
                                                 Width="50" Margin="5, 0, 0, 5" VerticalAlignment="Center" GotKeyboardFocus="TextBoxSelectContentByKeyboard"/>
                                        <TextBlock Margin="5, 0, 0, 5" VerticalAlignment="Center">
                                        <Run Text="min&#x207B;&#x00B9;" />
                                        </TextBlock>
                                    </StackPanel>
                                    <Separator Grid.Row="23" Grid.ColumnSpan="2" Margin="0, 0, 0, 5"/>
                                    <StackPanel Grid.Row="24" Grid.ColumnSpan="2" Margin="0, 0, 0, 5" Orientation="Vertical">
                                        <TextBlock Text="{StaticResource Beam_plus}" Margin="0, 0, 0, 5"/>
                                        <StackPanel Orientation="Horizontal" Margin="0, 0, 0, 5">
                                            <TextBlock Text="{StaticResource Element_number}" VerticalAlignment="Center"/>
                                            <ComboBox
                                                  ItemsSource="{Binding BeamPlusComboBoxItems, Mode=OneWay}" 
                                                  SelectedValue="{Binding BeamPlusComboBoxSelectedItem}"
                                                  IsEnabled="{Binding BeamPlusComboBoxIsNotEmpty}"
                                                  DropDownClosed="BeamPlusIndexComboBox_DropDownClosed"
                                                  Width="40" Margin="5, 0, 0, 0"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0, 0, 0, 5">
                                            <TextBlock Text="{StaticResource Split_into}"/>
                                            <TextBox
                                                 Text="{Binding BeamPlusDivision, Converter={StaticResource FormatToIntConverter}, UpdateSourceTrigger=PropertyChanged}"
                                                 IsEnabled="{Binding BeamPlusElementIsSelected}"
                                                 GotKeyboardFocus="TextBoxSelectContentByKeyboard"
                                                 Width="35" Margin="5, 0, 5, 0">
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="LostFocus">
                                                        <b:InvokeCommandAction Command="{Binding HistoryAddCommand}"/>
                                                    </b:EventTrigger>
                                                </b:Interaction.Triggers>
                                            </TextBox>
                                            <TextBlock Text="{StaticResource parts}"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0, 0, 0, 5">
                                            <TextBlock Text="{StaticResource Calculation_of_Jdi}" ToolTip="{StaticResource Method_of_calculating_Jdi}" VerticalAlignment="Center"/>
                                            <ComboBox Width="65" Margin="5, 0, 5, 0" 
                                                  SelectedIndex="{Binding BeamPlusIdN}" 
                                                  IsEnabled="{Binding BeamPlusElementIsSelected}">
                                                <ComboBoxItem Content="=Jd/n*"/>
                                                <ComboBoxItem Content="{StaticResource custom_value}"/>
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="LostFocus">
                                                        <b:InvokeCommandAction Command="{Binding HistoryAddCommand}"/>
                                                    </b:EventTrigger>
                                                </b:Interaction.Triggers>
                                            </ComboBox>
                                            <TextBox Text="{Binding BeamPlusIdNValue, Converter={StaticResource FormatDefaultConverter}}" 
                                                 IsEnabled="{Binding BeamPlusElementIsSelected}"
                                                 GotKeyboardFocus="TextBoxSelectContentByKeyboard"
                                                 Width="50"
                                                 VerticalAlignment="Center">
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="LostFocus">
                                                        <b:InvokeCommandAction Command="{Binding HistoryAddCommand}"/>
                                                    </b:EventTrigger>
                                                </b:Interaction.Triggers>
                                            </TextBox>
                                        </StackPanel>
                                        <TextBlock Text="{Binding BeamPlusText}"
                                               IsEnabled="{Binding BeamPlusElementIsSelected}"
                                               VerticalAlignment="Center" Margin="65, 0, 0, 0">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </ScrollViewer>
                    </Grid>

                    <Grid Grid.Row="0" Grid.Column="1" Margin="0, 10, 0, 10">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                                <Button Height="20" Width="20" Margin="0, 0, 5, 0" ToolTip="{StaticResource Add_element_Insert}" Command="{Binding AddItemCommand}">
                                    <Image Source="/icons/Add_16x.png" />
                                </Button>
                                <Button Height="20" Width="20" Margin="0, 0, 5, 0" ToolTip="{StaticResource Remove_element_Delete}" Command="{Binding RemoveItemCommand}">
                                    <Image Source="/icons/Remove_16x.png" />
                                </Button>
                                <Rectangle VerticalAlignment="Stretch" Width="1" Margin="0, 0, 5, 0" Stroke="Black" />
                                <Button Height="20" Width="20" Margin="0, 0, 5, 0" ToolTip="{StaticResource Move_element_up_Ctrl}" Command="{Binding MoveItemUpCommand}">
                                    <Image Source="/icons/Upload_16x.png" />
                                </Button>
                                <Button Height="20" Width="20" Margin="0, 0, 5, 0" ToolTip="{StaticResource Move_element_down_Ctrl}" Command="{Binding MoveItemDownCommand}">
                                    <Image Source="/icons/Download_16x.png" />
                                </Button>
                                <Rectangle VerticalAlignment="Stretch" Width="1" Margin="0, 0, 5, 0" Stroke="Black" />
                                <Button Height="20" Width="20" Margin="0, 0, 5, 0" ToolTip="{StaticResource Mirror_shaft_Ctrl}" Command="{Binding MirrorShaftCommand}">
                                    <Image Source="/icons/Mirror.png" />
                                </Button>
                                <Button Height="20" Width="20" Margin="0, 0, 5, 0" ToolTip="{StaticResource Remove_all_Ctrl}" Command="{Binding RemoveAllItemsCommand}">
                                    <Image Source="/icons/DeleteAllRows_16x.png" />
                                </Button>
                                <Rectangle VerticalAlignment="Stretch" Width="1" Margin="0, 0, 5, 0" Stroke="Black" />
                                <Button Height="20" Width="20" Margin="0, 0, 5, 0" ToolTip="{StaticResource Undo_Ctrl}" Command="{Binding HistoryBackCommand}">
                                    <Image Source="/icons/StepBackwards_16x.png" />
                                </Button>
                                <Button Height="20" Width="20" Margin="0, 0, 5, 0" ToolTip="{StaticResource Redo_Ctrl}" Command="{Binding HistoryForwardCommand}">
                                    <Image Source="/icons/StepForward_16x.png" />
                                </Button>
                            </StackPanel>


                            <DataGrid ItemsSource="{Binding Shaft.Elements}" 
                                      AutoGenerateColumns="False" 
                                      SelectionMode="Single"
                                      SelectedItem="{Binding ShaftElementSelected, Mode=TwoWay, Converter={StaticResource NewDataGridItemConverter}}"
                                      CanUserReorderColumns="False"
                                      CanUserResizeRows="False"
                                      CanUserDeleteRows="False"
                                      CanUserSortColumns="False"
                                      PreviewKeyDown="ShaftDataGrid_PreviewKeyDown"
                                      LoadingRow="ShaftDataGrid_LoadingRow"
                                      AddingNewItem="ShaftDataGrid_AddingNewItem"
                                      Grid.Row="1"
                                      Name="ShaftDataGrid" Margin="0,-2,0,2" CanUserResizeColumns="False" SelectionUnit="FullRow">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="RowEditEnding">
                                        <b:InvokeCommandAction Command="{Binding HistoryAddCommand}"/>
                                    </b:EventTrigger>
                                    <b:EventTrigger EventName="CellEditEnding">
                                        <b:InvokeCommandAction Command="{Binding CellEditEndingCommand}"/>
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                                <DataGrid.ColumnHeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding}"/>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="MaxHeight" Value="88"/>
                                    </Style>
                                </DataGrid.ColumnHeaderStyle>
                                <DataGrid.AlternatingRowBackground>
                                    <SolidColorBrush Color="#FFF4F4F4"/>
                                </DataGrid.AlternatingRowBackground>
                                <DataGrid.Columns>
                                    <DataGridComboBoxColumn Header="{StaticResource Element_type}"
                                                            Width="*"
                                                            ItemsSource="{x:Static local:ShaftElementForDataGrid.ElementTypesItems}"
                                                            SelectedItemBinding="{Binding Type, Converter={StaticResource EnumToStringByResourceDictionaryConverter}, UpdateSourceTrigger=PropertyChanged}">
                                        <DataGridComboBoxColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">
                                                <EventSetter Event="MouseUp" Handler="GridColumnFastEdit" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="BorderBrush" Value="GhostWhite"/>
                                                        <Setter Property="BorderThickness" Value="1.5"/>
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                        <Setter Property="Background" Value="SteelBlue"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridComboBoxColumn.CellStyle>
                                    </DataGridComboBoxColumn>
                                    <DataGridTextColumn Header="{StaticResource Section_length}" 
                                                        Binding="{Binding L, UpdateSourceTrigger=LostFocus, 
                                        Converter={StaticResource FormatDefaultConverter}, ConverterParameter=-3}" 
                                                        Width="*">
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEditableL}" Value="False">
                                                        <Setter Property="Foreground" Value="Transparent" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="IsHitTestVisible" Value="False" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="BorderBrush" Value="GhostWhite"/>
                                                        <Setter Property="BorderThickness" Value="1.5"/>
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                        <Setter Property="Background" Value="SteelBlue"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                                <EventSetter Event="PreviewGotKeyboardFocus" Handler="DataGridCell_SkipNonEditable"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="{StaticResource Outer_diameter}" 
                                                        Binding="{Binding De, UpdateSourceTrigger=LostFocus,
                                        Converter={StaticResource FormatDefaultConverter}, ConverterParameter=-3}" 
                                                        Width="*">
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEditableDe}" Value="False">
                                                        <Setter Property="Foreground" Value="Transparent" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="IsHitTestVisible" Value="False" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="BorderBrush" Value="GhostWhite"/>
                                                        <Setter Property="BorderThickness" Value="1.5"/>
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                        <Setter Property="Background" Value="SteelBlue"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                                <EventSetter Event="PreviewGotKeyboardFocus" Handler="DataGridCell_SkipNonEditable"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="{StaticResource Inner_diameter}" 
                                                        Binding="{Binding Di, UpdateSourceTrigger=LostFocus, 
                                        Converter={StaticResource FormatDefaultConverter}, ConverterParameter=-3}" 
                                                        Width="*">
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEditableDi}" Value="False">
                                                        <Setter Property="Foreground" Value="Transparent" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="IsHitTestVisible" Value="False" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="BorderBrush" Value="GhostWhite"/>
                                                        <Setter Property="BorderThickness" Value="1.5"/>
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                        <Setter Property="Background" Value="SteelBlue"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                                <EventSetter Event="PreviewGotKeyboardFocus" Handler="DataGridCell_SkipNonEditable"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="{StaticResource Disc_weight}" Width="*">
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="Text" 
                                                        Value="{Binding M, UpdateSourceTrigger=LostFocus, Converter={StaticResource FormatDefaultConverter}}"/>
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Text" 
                                                        Value="{Binding M, UpdateSourceTrigger=LostFocus, Converter={StaticResource FormatSpacesConverter}}"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEditableM}" Value="False">
                                                        <Setter Property="Foreground" Value="Transparent" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="IsHitTestVisible" Value="False" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="BorderBrush" Value="GhostWhite"/>
                                                        <Setter Property="BorderThickness" Value="1.5"/>
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                        <Setter Property="Background" Value="SteelBlue"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                                <EventSetter Event="PreviewGotKeyboardFocus" Handler="DataGridCell_SkipNonEditable"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="{StaticResource Moment_of_inertia_to_axis}" Width="*">
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="Text" 
                                                        Value="{Binding Io, UpdateSourceTrigger=LostFocus, Converter={StaticResource FormatDefaultConverter}}"/>
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Text" 
                                                        Value="{Binding Io, UpdateSourceTrigger=LostFocus, Converter={StaticResource FormatEConverter}}"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEditableIo}" Value="False">
                                                        <Setter Property="Foreground" Value="Transparent" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="IsHitTestVisible" Value="False" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="BorderBrush" Value="GhostWhite"/>
                                                        <Setter Property="BorderThickness" Value="1.5"/>
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                        <Setter Property="Background" Value="SteelBlue"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                                <EventSetter Event="PreviewGotKeyboardFocus" Handler="DataGridCell_SkipNonEditable"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="{StaticResource Moment_of_inertia_perp_to_axis}" Width="*">
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="Text" 
                                                        Value="{Binding Id, UpdateSourceTrigger=LostFocus, Converter={StaticResource FormatDefaultConverter}}"/>
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Text" 
                                                        Value="{Binding Id, UpdateSourceTrigger=LostFocus, Converter={StaticResource FormatEConverter}}"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEditableId}" Value="False">
                                                        <Setter Property="Foreground" Value="Transparent" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="IsHitTestVisible" Value="False" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="BorderBrush" Value="GhostWhite"/>
                                                        <Setter Property="BorderThickness" Value="1.5"/>
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                        <Setter Property="Background" Value="SteelBlue"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                                <EventSetter Event="PreviewGotKeyboardFocus" Handler="DataGridCell_SkipNonEditable"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="{StaticResource Radial_support_stiffness}" Width="*">
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="Text" 
                                                        Value="{Binding K, UpdateSourceTrigger=LostFocus, Converter={StaticResource FormatDefaultConverter}}"/>
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Text"
                                                        Value="{Binding K, UpdateSourceTrigger=LostFocus, Converter={StaticResource FormatEConverter}}"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEditableK}" Value="False">
                                                        <Setter Property="Foreground" Value="Transparent" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="IsHitTestVisible" Value="False" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="BorderBrush" Value="GhostWhite"/>
                                                        <Setter Property="BorderThickness" Value="1.5"/>
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                        <Setter Property="Background" Value="SteelBlue"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                                <EventSetter Event="PreviewGotKeyboardFocus" Handler="DataGridCell_SkipNonEditable"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="{StaticResource Magnetic_elastic_constant}" Width="*">
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="Text"
                                                        Value="{Binding Cm, UpdateSourceTrigger=LostFocus, Converter={StaticResource FormatDefaultConverter}}"/>
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Text" 
                                                        Value="{Binding Cm, UpdateSourceTrigger=LostFocus, Converter={StaticResource FormatEConverter}}"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEditableCm}" Value="False">
                                                        <Setter Property="Foreground" Value="Transparent" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="IsHitTestVisible" Value="False" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="BorderBrush" Value="GhostWhite"/>
                                                        <Setter Property="BorderThickness" Value="1.5"/>
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                        <Setter Property="Background" Value="SteelBlue"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                                <EventSetter Event="PreviewGotKeyboardFocus" Handler="DataGridCell_SkipNonEditable"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Grid>

                    <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Height="Auto">
                        <Border Margin="10" BorderThickness="1" BorderBrush="Gray" Padding="5" CornerRadius="3" MinHeight="541" VerticalAlignment="Top">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="163"/>
                                    <RowDefinition Height="80"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="65"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Row="0" Orientation="Vertical" Margin="0, 3, 0, 0">
                                    <TextBlock Text="{StaticResource Calculated_critical_speeds}" Margin="0, 0, 0, 5"/>
                                    <TextBox Text="{Binding KritikCalculation.CriticalSpeedsText, Mode=OneWay}" 
                                             TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Height="139" IsReadOnly="True"
                                             MouseDoubleClick="TextBoxSelectContentByMouse"/>
                                </StackPanel>
                                <StackPanel Grid.Row="1" Orientation="Vertical" Margin="0, 10, 0, 0">
                                    <TextBlock Text="{StaticResource First_critical_speed_corresponds_to}" Margin="0, 0, 0, 5"/>
                                    <TextBox Text="{Binding KritikCalculation.FirstCriticalSpeedRatioText, Mode=OneWay}" 
                                             TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Hidden" Height="38" IsReadOnly="True" 
                                             MouseDoubleClick="TextBoxSelectContentByMouse"/>
                                </StackPanel>

                                <StackPanel Grid.Row="2" Orientation="Vertical" Margin="0, 0, 0, 10" VerticalAlignment="Bottom">
                                    <TextBlock Text="{StaticResource Calculation_notes}" Margin="0, 0, 0, 5"/>
                                    <TextBox AcceptsReturn="True" MinHeight="190" Width="182" 
                                             ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto" TextWrapping="Wrap"
                                             MaxHeight="{Binding ElementName=MainGrid, Path=ActualHeight, Converter={StaticResource NotesTextBoxHeightConverter}}" 
                                             Text="{Binding CalculationProperties.Notes}"/>
                                </StackPanel>

                                <StackPanel Grid.Row="3" Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{StaticResource Max_critical_speed}" Margin="0, 0, 5, 0" VerticalAlignment="Center"/>
                                        <TextBox Text="{Binding Shaft.Properties.MaxCriticalSpeed, Converter={StaticResource FormatDefaultConverter}, UpdateSourceTrigger=PropertyChanged}" 
                                                 Width="35" GotKeyboardFocus="TextBoxSelectContentByKeyboard"/>
                                        <TextBlock Margin="5, 0, 5, 0" Text="min&#x207B;&#x00B9;" VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <Button Height="30" Margin="0, 10, 0, 0" 
                                            Command="{Binding KritikCalculateCommand}" 
                                            ToolTip="(F5)"
                                            Padding="3"
                                            PreviewMouseRightButtonUp="CalculationButton_MouseUp">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/icons/StartWithoutDebug_16x.png"/>
                                            <TextBlock Text="{StaticResource Calculate_critical_speed}" VerticalAlignment="Center" Margin="5, 0, 0, 0"/>
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>

                    <Border Grid.Row="1" Grid.Column="1" Height="150" Margin="0, 0, 0, 10" BorderThickness="1" BorderBrush="Gray" Padding="5" CornerRadius="3" VerticalAlignment="Bottom">
                        <oxy:PlotView Model="{Binding ShaftScheme.Scheme}" DefaultTrackerTemplate="{x:Null}" x:Name="ShaftSchemePlotView">
                            <dp:DataPiping.DataPipes>
                                <dp:DataPipeCollection>
                                    <dp:DataPipe Source="{Binding RelativeSource={RelativeSource AncestorType={x:Type oxy:PlotView}}, Path=ActualWidth}"
                                                 Target="{Binding ShaftScheme1Width, Mode=OneWayToSource}"/>
                                </dp:DataPipeCollection>
                            </dp:DataPiping.DataPipes>
                        </oxy:PlotView>
                    </Border>
                </Grid>

            </TabItem>
            <TabItem IsEnabled="{Binding OscillationShapesTabIsEnabled}">
                <TabItem.Header>
                    <Label Content="{StaticResource Oscillation_shapes}"/>
                </TabItem.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Border Margin="15, 15, 0, 15" BorderThickness="1" BorderBrush="Gray" Padding="5" CornerRadius="3"  VerticalAlignment="Top">
                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{StaticResource Critical_speed_number}" Margin="0, 0, 7, 0"/>
                                    <StackPanel Orientation="Horizontal" Height="20" VerticalAlignment="Center">
                                        <TextBox Width="20" Text="{Binding OscillationShapesViewModel.ShapeNumber, Mode=OneWay}" Focusable="False"/>
                                        <StackPanel Orientation="Vertical">
                                            <Button Content="▲" FontSize="7" Padding="0,-1, 0, 0" Width="15" Height="10" 
                                                    Command="{Binding OscillationShapesViewModel.IncreaseShapeNumberCommand}"/>
                                            <Button Content="▼" FontSize="7" Padding="0,-1, 0, 0" Width="15" Height="10"
                                                    Command="{Binding OscillationShapesViewModel.DecreaseShapeNumberCommand}"/>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                                <Separator Margin="0, 5, 0, 5"/>
                                <TextBlock Text="{Binding OscillationShapesViewModel.Description}"/>
                                <Separator Margin="0, 5, 0, 5"/>
                                <TextBlock Text="{StaticResource Display}"/>
                                <Grid Margin="15, 2, 0, 0">
                                    <StackPanel Orientation="Vertical">
                                        <CheckBox Content="{StaticResource draw_nodes}" 
                                                  IsChecked="{Binding OscillationShapesViewModel.ShowNodesIsChecked}"/>
                                        <CheckBox Content="{StaticResource draw_grid}" 
                                                  IsChecked="{Binding OscillationShapesViewModel.ShowGridIsChecked}"/>
                                    </StackPanel>
                                </Grid>
                                <Separator Margin="0, 5, 0, 5"/>
                                <TextBlock Text="{StaticResource Oscillation_shape_saving}"/>
                                <Grid Margin="15, 2, 0, 0">
                                    <StackPanel Orientation="Vertical">
                                        <CheckBox Content="{StaticResource shaft_scheme}" IsChecked="{Binding OscillationShapesViewModel.SaveSchemeIsChecked}"/>
                                        <CheckBox Content="{StaticResource oscillation_shape}" IsChecked="{Binding OscillationShapesViewModel.SaveShapeIsChecked}"/>
                                        <CheckBox Content="{StaticResource text_label}" IsChecked="{Binding OscillationShapesViewModel.SaveDescriptionIsChecked}"/>
                                    </StackPanel>
                                </Grid>
                                <Button Height="25" Width="150" Margin="0, 5, 0, 5" Padding="3" Command="{Binding OscillationShapesViewModel.SaveToPNGCommand}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="/icons/Save_16x.png"/>
                                        <TextBlock Text="{StaticResource Save_oscillation_shape}" VerticalAlignment="Center" Margin="5, 0, 0, 0"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </Border>
                    </Grid>
                    <Grid Margin="15" Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="150"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Row="0" Margin="0, 0, 0, 10" BorderThickness="1" BorderBrush="Gray" CornerRadius="3">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="160"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <oxy:PlotView Model="{Binding ShaftScheme2.Scheme}" DefaultTrackerTemplate="{x:Null}"/>
                                <oxy:PlotView Model="{Binding OscillationShapesViewModel.MainPlot}" DefaultTrackerTemplate="{x:Null}" Grid.Row="1" Margin="0, 2, 0, 4"/>
                            </Grid>
                        </Border>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border BorderThickness="1" CornerRadius="1" Grid.Column="0" BorderBrush="{Binding OscillationShapesViewModel.ThumbnailPlotWBrush}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="18"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                            <b:InvokeCommandAction Command="{Binding OscillationShapesViewModel.ChangeMainPlotCommand}" CommandParameter="0"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <TextBlock Grid.Row="0" Text="{StaticResource Shaft_deflection_w}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0, 2, 0, 0"/>
                                    <oxy:PlotView Model="{Binding OscillationShapesViewModel.ThumbnailPlotW}" DefaultTrackerTemplate="{x:Null}" Grid.Row="1"/>
                                </Grid>
                            </Border>
                            <Border BorderThickness="1" CornerRadius="1" Grid.Column="1" BorderBrush="{Binding OscillationShapesViewModel.ThumbnailPlotPhiBrush}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="18"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                            <b:InvokeCommandAction Command="{Binding OscillationShapesViewModel.ChangeMainPlotCommand}" CommandParameter="1"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <TextBlock Grid.Row="0" Text="{StaticResource Shaft_rotation_phi}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0, 2, 0, 0"/>
                                    <oxy:PlotView Model="{Binding OscillationShapesViewModel.ThumbnailPlotPhi}" DefaultTrackerTemplate="{x:Null}" Grid.Row="1"/>
                                </Grid>
                            </Border>
                            <Border BorderThickness="1" CornerRadius="1" Grid.Column="2" BorderBrush="{Binding OscillationShapesViewModel.ThumbnailPlotMBrush}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="18"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                            <b:InvokeCommandAction Command="{Binding OscillationShapesViewModel.ChangeMainPlotCommand}" CommandParameter="2"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <TextBlock Grid.Row="0" Text="{StaticResource Bending_moment_M}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0, 2, 0, 0"/>
                                    <oxy:PlotView Model="{Binding OscillationShapesViewModel.ThumbnailPlotM}" DefaultTrackerTemplate="{x:Null}" Grid.Row="1"/>
                                </Grid>
                            </Border>
                            <Border BorderThickness="1" CornerRadius="1" Grid.Column="3" BorderBrush="{Binding OscillationShapesViewModel.ThumbnailPlotTBrush}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="18"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                            <b:InvokeCommandAction Command="{Binding OscillationShapesViewModel.ChangeMainPlotCommand}" CommandParameter="3"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <TextBlock Grid.Row="0" Text="{StaticResource Shear_force_T}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0, 2, 0, 0"/>
                                    <oxy:PlotView Model="{Binding OscillationShapesViewModel.ThumbnailPlotT}" DefaultTrackerTemplate="{x:Null}" Grid.Row="1"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                </Grid>

            </TabItem>

            <TabItem 
                IsEnabled="{Binding OscillationShapesTabIsEnabled}" 
                IsSelected="{Binding CampbellViewModel.CampbellTabIsSelected}">
                <TabItem.Header>
                    <Label Content="{StaticResource Campbell_diagram}"/>
                </TabItem.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="260"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Border Margin="15, 15, 0, 15" BorderThickness="1" BorderBrush="Gray" Padding="5" CornerRadius="3"  VerticalAlignment="Top">
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="{StaticResource Calculation_settings}"/>
                                <Grid Margin="10, 5, 0, 0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1.1*"/>
                                        <ColumnDefinition Width="0.9*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{StaticResource Max_critical_speed}"/>
                                    <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1" Margin="0, 0, 0, 5">
                                        <TextBox Width="50" 
                                                 Text="{Binding CampbellViewModel.MaxCriticalSpeed, Converter={StaticResource FormatToIntConverter}, UpdateSourceTrigger=PropertyChanged}"
                                                 GotKeyboardFocus="TextBoxSelectContentByKeyboard"
                                                 IsEnabled="{Binding CampbellViewModel.NotInProgress}"/>
                                        <TextBlock Text="rpm" Margin="2, 0, 0, 0"/>
                                    </StackPanel>
                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{StaticResource Max_rotor_speed}"/>
                                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Margin="0, 0, 0, 5">
                                        <TextBox Width="50" 
                                                 Text="{Binding CampbellViewModel.MaxShaftRpm, Converter={StaticResource FormatToIntConverter}, UpdateSourceTrigger=PropertyChanged}"
                                                 GotKeyboardFocus="TextBoxSelectContentByKeyboard"
                                                 IsEnabled="{Binding CampbellViewModel.NotInProgress}"/>
                                        <TextBlock Text="rpm" Margin="2, 0, 0, 0"/>
                                    </StackPanel>

                                    <TextBlock Grid.Row="2" Grid.Column="0" Text="{StaticResource No_of_steps}"/>
                                    <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1" Margin="0, 0, 0, 5">
                                        <TextBox Width="50"
                                                 Text="{Binding CampbellViewModel.RpmDivision, Converter={StaticResource FormatToIntConverter}, UpdateSourceTrigger=PropertyChanged}"
                                                 GotKeyboardFocus="TextBoxSelectContentByKeyboard"
                                                 IsEnabled="{Binding CampbellViewModel.NotInProgress}"/>
                                        <TextBlock Text="[-]" Margin="2, 0, 0, 0"/>
                                    </StackPanel>

                                    <TextBlock Grid.Row="3" Grid.Column="0" Text="{StaticResource Speed_step}"/>
                                    <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1" Margin="0, 0, 0, 5">
                                        <TextBlock Width="50"
                                                   Text="{Binding CampbellViewModel.RpmStep, Mode=OneWay}"/>
                                        <TextBlock Text="rpm" Margin="2, 0, 0, 0"/>
                                    </StackPanel>

                                    <CheckBox Grid.Row="4" Grid.ColumnSpan="2" Margin="0, 0, 0, 5"
                                              Content="{StaticResource GyroscopicEffect_forward}" 
                                              IsChecked="{Binding CampbellViewModel.ForwardPrecessionIsChecked}"
                                              IsEnabled="{Binding CampbellViewModel.NotInProgress}"/>
                                    <CheckBox Grid.Row="5" Grid.ColumnSpan="2" 
                                              Content="{StaticResource GyroscopicEffect_backward}"
                                              IsChecked="{Binding CampbellViewModel.BackwardPrecessionIsChecked}"
                                              IsEnabled="{Binding CampbellViewModel.NotInProgress}"/>

                                </Grid>
                                <Button Height="25" Width="190" Margin="0, 5, 0, 5" Padding="3" Command="{Binding CampbellViewModel.CreateDiagramCommand}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="/icons/StartWithoutDebug_16x.png"/>
                                        <TextBlock Text="{StaticResource Create_Campbell_diagram}" VerticalAlignment="Center" Margin="5, 0, 0, 0"/>
                                    </StackPanel>
                                </Button>
                                <Separator Grid.Row="8" Grid.ColumnSpan="2" Margin="0, 5, 0, 5"/>
                                <TextBlock Text="{StaticResource Display}"/>
                                <StackPanel Margin="10, 5, 0, 0" Orientation="Vertical">
                                    <CheckBox Margin="0, 0, 0, 5"
                                              Content="{StaticResource operating_speed}" 
                                              IsChecked="{Binding CampbellViewModel.OperatingSpeedIsChecked}"/>
                                    <CheckBox Margin="0, 0, 0, 5"
                                              Content="{StaticResource runaway_speed}"
                                              IsChecked="{Binding CampbellViewModel.RunawaySpeedIsChecked}"/>
                                    <CheckBox x:Name="criticalSpeedLowerLimitCheckBox" 
                                              Content="{StaticResource critical_speed_lower_limit}" 
                                              IsChecked="{Binding CampbellViewModel.CriticalSpeedLowerLimitIsChecked}"
                                              Margin="0, 0, 0, 5"/>
                                    <StackPanel Orientation="Horizontal" Margin="20, 0, 0, 5"
                                                IsEnabled="{Binding ElementName=criticalSpeedLowerLimitCheckBox, Path=IsChecked}">
                                        <TextBox Text="{Binding CampbellViewModel.CriticalSpeedLowerLimitFactor, 
                                            UpdateSourceTrigger=PropertyChanged, Converter={StaticResource RemoveDecimalSeparatorAtTheEndConverter}}" 
                                                 GotKeyboardFocus="TextBoxSelectContentByKeyboard"
                                                 Width="40"/>
                                        <TextBlock Text="×"/>
                                        <TextBlock Text="{StaticResource runaway_speed}" Margin="2, 0, 0, 0"/>
                                    </StackPanel>
                                    <CheckBox Margin="0, 0, 0, 5"
                                              Content="{StaticResource operating_speed_range}"
                                              IsChecked="{Binding CampbellViewModel.OperatingSpeedRangeIsChecked}"
                                              x:Name="operatingSpeedRangeCheckBox"/>
                                    <StackPanel Orientation="Horizontal" Margin="20, 0, 0, 5"
                                                IsEnabled="{Binding ElementName=operatingSpeedRangeCheckBox, Path=IsChecked}">
                                        <TextBox Text="{Binding CampbellViewModel.OperatingSpeedRangeMin, UpdateSourceTrigger=PropertyChanged}" 
                                                 GotKeyboardFocus="TextBoxSelectContentByKeyboard"
                                                 Width="40"/>
                                        <TextBlock Text=" – "/>
                                        <TextBox Text="{Binding CampbellViewModel.OperatingSpeedRangeMax, UpdateSourceTrigger=PropertyChanged}" 
                                                 GotKeyboardFocus="TextBoxSelectContentByKeyboard"
                                                 Width="40"/>
                                        <TextBlock Text="rpm" Margin="2, 0, 0, 0"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0, 0, 0, 5">
                                        <CheckBox Content="{StaticResource Show_labels}" 
                                                  IsChecked="{Binding CampbellViewModel.ShowLabelsIsChecked}"/>
                                        <TextBlock Text="(" Margin="5, -4, 0, 0" FontSize="15"/>
                                        <CheckBox Content="{StaticResource label_background}" 
                                                  IsChecked="{Binding CampbellViewModel.LabelsBackgroundIsChecked}"/>
                                        <TextBlock Text=")" Margin="0, -4, 0, 0" FontSize="15"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0, 0, 0, 5" HorizontalAlignment="Right">
                                        <Button VerticalAlignment="Center"
                                                Height="17"
                                                Width="100"
                                                Margin="0, 0, 6, 0"
                                                Command="{Binding CampbellViewModel.ResetLabelsCommand}">
                                            <TextBlock Text="{StaticResource Reset_positions}" 
                                                       VerticalAlignment="Center"
                                                       FontSize="11"/>
                                        </Button>
                                    </StackPanel>
                                </StackPanel>

                                <Separator Grid.Row="8" Grid.ColumnSpan="2" Margin="0, 5, 0, 5"/>
                                <Grid Margin="0, 5, 5, 0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{StaticResource Image_dimensions}"/>
                                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                                        <TextBox Text="{Binding CampbellViewModel.ImageWidth, UpdateSourceTrigger=PropertyChanged}" 
                                                 GotKeyboardFocus="TextBoxSelectContentByKeyboard"
                                                 Width="40" Margin="0, 0, 2, 0"/>
                                        <TextBlock Text="×" Margin="0, 0, 2, 0"/>
                                        <TextBox Text="{Binding CampbellViewModel.ImageHeight, UpdateSourceTrigger=PropertyChanged}" 
                                                 GotKeyboardFocus="TextBoxSelectContentByKeyboard"
                                                 Width="40" Margin="0, 0, 2, 0"/>
                                        <TextBlock Text="px"/>
                                    </StackPanel>
                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{StaticResource Image_resolution}" Margin="0, 5, 0, 0"/>
                                    <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="0, 5, 0, 0">
                                        <TextBox Text="{Binding CampbellViewModel.ImageDPI, UpdateSourceTrigger=PropertyChanged}" 
                                                 GotKeyboardFocus="TextBoxSelectContentByKeyboard"
                                                 Width="40" Margin="0, 0, 2, 0"/>
                                        <TextBlock Text="DPI"/>
                                        <Button Height="17" Width="17" Margin="10, 0, 0, 0" 
                                                VerticalAlignment="Center"
                                                ToolTip="{StaticResource Default_values}"
                                                Command="{Binding CampbellViewModel.ResetImagePropertiesCommand}">
                                            <Image Source="/icons/RestoreImage_16x.png"/>
                                        </Button>
                                    </StackPanel>
                                </Grid>

                                <Button Height="25" Width="190" Margin="0, 5, 0, 5" Padding="3" Command="{Binding CampbellViewModel.SaveDiagramCommand}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="/icons/Save_16x.png"/>
                                        <TextBlock Text="{StaticResource Save_Campbell_diagram}" VerticalAlignment="Center" Margin="5, 0, 0, 0"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </Border>
                    </Grid>
                    <Grid Margin="15, 15, 15, 5.2" Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Row="0" Margin="0, 0, 0, 10" BorderThickness="1" BorderBrush="Gray" CornerRadius="3">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <oxy:PlotView Model="{Binding CampbellViewModel.CampbellDiagramPlotModel}" DefaultTrackerTemplate="{x:Null}" Grid.Row="0" Margin="0, 2, 0, 4"/>
                                <Border BorderBrush="Black" 
                                        BorderThickness="1" 
                                        CornerRadius="3" 
                                        Background="White" 
                                        Grid.Row="0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Visibility="{Binding CampbellViewModel.ProgressBarVisibility, Mode=OneWay}"
                                        Padding="7">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <StackPanel Orientation="Horizontal" Grid.Row="0">
                                            <TextBlock Text="{StaticResource Creating_Campbell_diagram}" Margin="0, 0, 0, 5"/>
                                            <Button Command="{Binding CampbellViewModel.CancelCommand}"
                                                    Width="15" Height="15"
                                                    VerticalAlignment="Center"
                                                    Margin="2, 0, 0, 5" 
                                                    Background="Transparent"
                                                    BorderBrush="Transparent"
                                                    Padding="0"
                                                    ToolTip="{StaticResource Cancel}">
                                                <Image Source="/icons/Cancel_16x.png"/>
                                            </Button>
                                        </StackPanel>
                                        
                                        <ProgressBar Grid.Row="1"
                                                     Height="20" Width="150" 
                                                     Minimum="0" 
                                                     Maximum="100" 
                                                     Value="{Binding CampbellViewModel.ProgressPercentage, Mode=OneWay}"/>
                                        <TextBlock Grid.Row="1"
                                                   HorizontalAlignment="Center"
                                                   Margin="0, 2, 0, 0">
                                            <Run Text="{Binding CampbellViewModel.ProgressPercentage, Mode=OneWay}"/>
                                            <Run Text="%"/>
                                        </TextBlock>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>

        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0, 5, 20, 0">
            <TextBlock Text="{StaticResource Output_language}" Margin="0, 0, 5, 0" VerticalAlignment="Center"/>
            <ComboBox Width="80" Height="23" ItemsSource="{Binding Strings.LanguageNames}" 
                      SelectedValue="{Binding Strings.SelectedLanguage, Converter={StaticResource EnumToStringConverter}}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="DropDownClosed">
                        <b:InvokeCommandAction Command="{Binding LanguageDropDownClosedCommand}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ComboBox>

            <TextBlock Text="{StaticResource Application_language}" Margin="10, 0, 5, 0" VerticalAlignment="Center"/>
            <ComboBox Width="80" Height="23"
                      ItemsSource="{Binding ElementName=KritikMainWindow, Path=Languages}"
                      x:Name="ApplicationLanguageComboBox"
                      DropDownClosed="ApplicationLanguageComboBox_DropDownClosed">
            </ComboBox>
        </StackPanel>

    </Grid>
    <Window.InputBindings>
        <KeyBinding Command="{Binding NewCalculationCommand}" Key="N" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding OpenFileCommand}" Key="O" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding SaveFileCommand}" Key="S" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding SaveFileAsCommand}" Key="S" Modifiers="Ctrl+Shift"/>
        <KeyBinding Command="{Binding AddItemCommand}" Key="Insert"/>
        <KeyBinding Command="{Binding RemoveItemCommand}" Key="Delete"/>
        <KeyBinding Command="{Binding MoveItemUpCommand}" Key="Up" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding MoveItemDownCommand}" Key="Down" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding MirrorShaftCommand}" Key="M" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding RemoveAllItemsCommand}" Key="Delete" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding HistoryBackCommand}" Key="Z" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding HistoryForwardCommand}" Key="Y" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding KritikCalculateCommand}" Key="F5"/>
        <KeyBinding Command="{Binding CampbellViewModel.CreateDiagramCommand}" Key="Return"/>
    </Window.InputBindings>
</Window>
